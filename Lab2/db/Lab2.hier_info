|DE2_115
CLOCK_50 => top_level:Inst_top_level.clk
KEY[0] => top_level:Inst_top_level.reset
KEY[1] => top_level:Inst_top_level.pause_btn
KEY[2] => top_level:Inst_top_level.pwm_btn
KEY[3] => top_level:Inst_top_level.speed_btn
GPIO[0] <> top_level:Inst_top_level.scl
GPIO[1] <> top_level:Inst_top_level.sda
GPIO[2] <> GPIO[2]
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_EN <= top_level:Inst_top_level.lcd_en
LCD_RS <= top_level:Inst_top_level.lcd_rs
LCD_RW <= <GND>
LCD_DATA[0] <> LCD_DATA[0]
LCD_DATA[1] <> LCD_DATA[1]
LCD_DATA[2] <> LCD_DATA[2]
LCD_DATA[3] <> LCD_DATA[3]
LCD_DATA[4] <> LCD_DATA[4]
LCD_DATA[5] <> LCD_DATA[5]
LCD_DATA[6] <> LCD_DATA[6]
LCD_DATA[7] <> LCD_DATA[7]
SRAM_DQ[0] <> top_level:Inst_top_level.sram_io[0]
SRAM_DQ[1] <> top_level:Inst_top_level.sram_io[1]
SRAM_DQ[2] <> top_level:Inst_top_level.sram_io[2]
SRAM_DQ[3] <> top_level:Inst_top_level.sram_io[3]
SRAM_DQ[4] <> top_level:Inst_top_level.sram_io[4]
SRAM_DQ[5] <> top_level:Inst_top_level.sram_io[5]
SRAM_DQ[6] <> top_level:Inst_top_level.sram_io[6]
SRAM_DQ[7] <> top_level:Inst_top_level.sram_io[7]
SRAM_DQ[8] <> top_level:Inst_top_level.sram_io[8]
SRAM_DQ[9] <> top_level:Inst_top_level.sram_io[9]
SRAM_DQ[10] <> top_level:Inst_top_level.sram_io[10]
SRAM_DQ[11] <> top_level:Inst_top_level.sram_io[11]
SRAM_DQ[12] <> top_level:Inst_top_level.sram_io[12]
SRAM_DQ[13] <> top_level:Inst_top_level.sram_io[13]
SRAM_DQ[14] <> top_level:Inst_top_level.sram_io[14]
SRAM_DQ[15] <> top_level:Inst_top_level.sram_io[15]
SRAM_ADDR[0] <= top_level:Inst_top_level.sram_address[0]
SRAM_ADDR[1] <= top_level:Inst_top_level.sram_address[1]
SRAM_ADDR[2] <= top_level:Inst_top_level.sram_address[2]
SRAM_ADDR[3] <= top_level:Inst_top_level.sram_address[3]
SRAM_ADDR[4] <= top_level:Inst_top_level.sram_address[4]
SRAM_ADDR[5] <= top_level:Inst_top_level.sram_address[5]
SRAM_ADDR[6] <= top_level:Inst_top_level.sram_address[6]
SRAM_ADDR[7] <= top_level:Inst_top_level.sram_address[7]
SRAM_ADDR[8] <= top_level:Inst_top_level.sram_address[8]
SRAM_ADDR[9] <= top_level:Inst_top_level.sram_address[9]
SRAM_ADDR[10] <= top_level:Inst_top_level.sram_address[10]
SRAM_ADDR[11] <= top_level:Inst_top_level.sram_address[11]
SRAM_ADDR[12] <= top_level:Inst_top_level.sram_address[12]
SRAM_ADDR[13] <= top_level:Inst_top_level.sram_address[13]
SRAM_ADDR[14] <= top_level:Inst_top_level.sram_address[14]
SRAM_ADDR[15] <= top_level:Inst_top_level.sram_address[15]
SRAM_ADDR[16] <= top_level:Inst_top_level.sram_address[16]
SRAM_ADDR[17] <= top_level:Inst_top_level.sram_address[17]
SRAM_ADDR[18] <= top_level:Inst_top_level.sram_address[18]
SRAM_ADDR[19] <= top_level:Inst_top_level.sram_address[19]
SRAM_UB_N <= top_level:Inst_top_level.sram_ub_n
SRAM_LB_N <= top_level:Inst_top_level.sram_lb_n
SRAM_WE_N <= top_level:Inst_top_level.sram_we_n
SRAM_CE_N <= top_level:Inst_top_level.sram_ce_n
SRAM_OE_N <= top_level:Inst_top_level.sram_oe_n


|DE2_115|top_level:Inst_top_level
clk => PWM:Inst_PWM.clk
clk => LCD_User_Logic:Inst_LCD_User_Logic.iClk
clk => system_controller:Inst_system_controller.clk
clk => i2c_user_logic:Inst_i2c_user_logic.clk
clk => SRAM_Controller:Inst_SRAM_Controller.clk
clk => address_counter:Inst_Address_Counter.clk
clk => ROM1Port:Inst_ROM1_Port.clock
clk => btn_debounce_toggle:Inst_BTN_Debounce_reset.CLK
clk => btn_debounce_toggle:Inst_BTN_Debounce_pause.CLK
clk => btn_debounce_toggle:Inst_BTN_Debounce_speed.CLK
clk => btn_debounce_toggle:Inst_BTN_Debounce_pwm.CLK
clk => Reset_Delay:Inst_Reset_Delay.iCLK
reset => btn_debounce_toggle:Inst_BTN_Debounce_reset.BTN_I
pause_btn => btn_debounce_toggle:Inst_BTN_Debounce_pause.BTN_I
pwm_btn => btn_debounce_toggle:Inst_BTN_Debounce_pwm.BTN_I
speed_btn => btn_debounce_toggle:Inst_BTN_Debounce_speed.BTN_I
pwm_out <= PWM:Inst_PWM.pwm_o
sda <> i2c_user_logic:Inst_i2c_user_logic.sda
scl <> i2c_user_logic:Inst_i2c_user_logic.scl
lcd_data[0] <= LCD_User_Logic:Inst_LCD_User_Logic.data[0]
lcd_data[1] <= LCD_User_Logic:Inst_LCD_User_Logic.data[1]
lcd_data[2] <= LCD_User_Logic:Inst_LCD_User_Logic.data[2]
lcd_data[3] <= LCD_User_Logic:Inst_LCD_User_Logic.data[3]
lcd_data[4] <= LCD_User_Logic:Inst_LCD_User_Logic.data[4]
lcd_data[5] <= LCD_User_Logic:Inst_LCD_User_Logic.data[5]
lcd_data[6] <= LCD_User_Logic:Inst_LCD_User_Logic.data[6]
lcd_data[7] <= LCD_User_Logic:Inst_LCD_User_Logic.data[7]
lcd_en <= LCD_User_Logic:Inst_LCD_User_Logic.en
lcd_rs <= LCD_User_Logic:Inst_LCD_User_Logic.rs
sram_io[0] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[0]
sram_io[1] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[1]
sram_io[2] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[2]
sram_io[3] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[3]
sram_io[4] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[4]
sram_io[5] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[5]
sram_io[6] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[6]
sram_io[7] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[7]
sram_io[8] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[8]
sram_io[9] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[9]
sram_io[10] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[10]
sram_io[11] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[11]
sram_io[12] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[12]
sram_io[13] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[13]
sram_io[14] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[14]
sram_io[15] <> SRAM_Controller:Inst_SRAM_Controller.sram_io[15]
sram_address[0] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[0]
sram_address[1] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[1]
sram_address[2] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[2]
sram_address[3] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[3]
sram_address[4] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[4]
sram_address[5] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[5]
sram_address[6] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[6]
sram_address[7] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[7]
sram_address[8] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[8]
sram_address[9] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[9]
sram_address[10] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[10]
sram_address[11] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[11]
sram_address[12] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[12]
sram_address[13] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[13]
sram_address[14] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[14]
sram_address[15] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[15]
sram_address[16] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[16]
sram_address[17] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[17]
sram_address[18] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[18]
sram_address[19] <= SRAM_Controller:Inst_SRAM_Controller.sram_address[19]
sram_we_n <= SRAM_Controller:Inst_SRAM_Controller.sram_we_n
sram_oe_n <= SRAM_Controller:Inst_SRAM_Controller.sram_oe_n
sram_ce_n <= SRAM_Controller:Inst_SRAM_Controller.sram_ce_n
sram_lb_n <= SRAM_Controller:Inst_SRAM_Controller.sram_lb_n
sram_ub_n <= SRAM_Controller:Inst_SRAM_Controller.sram_ub_n


|DE2_115|top_level:Inst_top_level|PWM:Inst_PWM
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => pwm.CLK
reset => counter[0].OUTPUTSELECT
reset => counter[1].OUTPUTSELECT
reset => counter[2].OUTPUTSELECT
reset => counter[3].OUTPUTSELECT
reset => counter[4].OUTPUTSELECT
reset => counter[5].OUTPUTSELECT
reset => counter[6].OUTPUTSELECT
reset => counter[7].OUTPUTSELECT
reset => pwm.OUTPUTSELECT
reset => PWM_Process.IN0
clk_en => PWM_Process.IN1
value_i[0] => ~NO_FANOUT~
value_i[1] => ~NO_FANOUT~
value_i[2] => ~NO_FANOUT~
value_i[3] => ~NO_FANOUT~
value_i[4] => ~NO_FANOUT~
value_i[5] => ~NO_FANOUT~
value_i[6] => ~NO_FANOUT~
value_i[7] => ~NO_FANOUT~
value_i[8] => LessThan0.IN8
value_i[9] => LessThan0.IN7
value_i[10] => LessThan0.IN6
value_i[11] => LessThan0.IN5
value_i[12] => LessThan0.IN4
value_i[13] => LessThan0.IN3
value_i[14] => LessThan0.IN2
value_i[15] => LessThan0.IN1
pwm_o <= pwm.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|HEX_to_ASCII:Inst_HEX_to_ASCII_0
HEX_i[0] => Mux4.IN19
HEX_i[0] => Mux5.IN19
HEX_i[0] => Mux6.IN19
HEX_i[1] => Mux0.IN10
HEX_i[1] => Mux1.IN10
HEX_i[1] => Mux2.IN10
HEX_i[1] => Mux3.IN10
HEX_i[1] => Mux4.IN18
HEX_i[1] => Mux5.IN18
HEX_i[1] => Mux6.IN18
HEX_i[2] => Mux0.IN9
HEX_i[2] => Mux1.IN9
HEX_i[2] => Mux2.IN9
HEX_i[2] => Mux3.IN9
HEX_i[2] => Mux4.IN17
HEX_i[2] => Mux5.IN17
HEX_i[2] => Mux6.IN17
HEX_i[3] => Mux0.IN8
HEX_i[3] => Mux1.IN8
HEX_i[3] => Mux2.IN8
HEX_i[3] => Mux3.IN8
HEX_i[3] => Mux4.IN16
HEX_i[3] => Mux5.IN16
HEX_i[3] => Mux6.IN16
ASCII_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[7] <= <GND>


|DE2_115|top_level:Inst_top_level|HEX_to_ASCII:Inst_HEX_to_ASCII_1
HEX_i[0] => Mux4.IN19
HEX_i[0] => Mux5.IN19
HEX_i[0] => Mux6.IN19
HEX_i[1] => Mux0.IN10
HEX_i[1] => Mux1.IN10
HEX_i[1] => Mux2.IN10
HEX_i[1] => Mux3.IN10
HEX_i[1] => Mux4.IN18
HEX_i[1] => Mux5.IN18
HEX_i[1] => Mux6.IN18
HEX_i[2] => Mux0.IN9
HEX_i[2] => Mux1.IN9
HEX_i[2] => Mux2.IN9
HEX_i[2] => Mux3.IN9
HEX_i[2] => Mux4.IN17
HEX_i[2] => Mux5.IN17
HEX_i[2] => Mux6.IN17
HEX_i[3] => Mux0.IN8
HEX_i[3] => Mux1.IN8
HEX_i[3] => Mux2.IN8
HEX_i[3] => Mux3.IN8
HEX_i[3] => Mux4.IN16
HEX_i[3] => Mux5.IN16
HEX_i[3] => Mux6.IN16
ASCII_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[7] <= <GND>


|DE2_115|top_level:Inst_top_level|HEX_to_ASCII:Inst_HEX_to_ASCII_2
HEX_i[0] => Mux4.IN19
HEX_i[0] => Mux5.IN19
HEX_i[0] => Mux6.IN19
HEX_i[1] => Mux0.IN10
HEX_i[1] => Mux1.IN10
HEX_i[1] => Mux2.IN10
HEX_i[1] => Mux3.IN10
HEX_i[1] => Mux4.IN18
HEX_i[1] => Mux5.IN18
HEX_i[1] => Mux6.IN18
HEX_i[2] => Mux0.IN9
HEX_i[2] => Mux1.IN9
HEX_i[2] => Mux2.IN9
HEX_i[2] => Mux3.IN9
HEX_i[2] => Mux4.IN17
HEX_i[2] => Mux5.IN17
HEX_i[2] => Mux6.IN17
HEX_i[3] => Mux0.IN8
HEX_i[3] => Mux1.IN8
HEX_i[3] => Mux2.IN8
HEX_i[3] => Mux3.IN8
HEX_i[3] => Mux4.IN16
HEX_i[3] => Mux5.IN16
HEX_i[3] => Mux6.IN16
ASCII_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[7] <= <GND>


|DE2_115|top_level:Inst_top_level|HEX_to_ASCII:Inst_HEX_to_ASCII_3
HEX_i[0] => Mux4.IN19
HEX_i[0] => Mux5.IN19
HEX_i[0] => Mux6.IN19
HEX_i[1] => Mux0.IN10
HEX_i[1] => Mux1.IN10
HEX_i[1] => Mux2.IN10
HEX_i[1] => Mux3.IN10
HEX_i[1] => Mux4.IN18
HEX_i[1] => Mux5.IN18
HEX_i[1] => Mux6.IN18
HEX_i[2] => Mux0.IN9
HEX_i[2] => Mux1.IN9
HEX_i[2] => Mux2.IN9
HEX_i[2] => Mux3.IN9
HEX_i[2] => Mux4.IN17
HEX_i[2] => Mux5.IN17
HEX_i[2] => Mux6.IN17
HEX_i[3] => Mux0.IN8
HEX_i[3] => Mux1.IN8
HEX_i[3] => Mux2.IN8
HEX_i[3] => Mux3.IN8
HEX_i[3] => Mux4.IN16
HEX_i[3] => Mux5.IN16
HEX_i[3] => Mux6.IN16
ASCII_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[7] <= <GND>


|DE2_115|top_level:Inst_top_level|HEX_to_ASCII:Inst_HEX_to_ASCII_4
HEX_i[0] => Mux4.IN19
HEX_i[0] => Mux5.IN19
HEX_i[0] => Mux6.IN19
HEX_i[1] => Mux0.IN10
HEX_i[1] => Mux1.IN10
HEX_i[1] => Mux2.IN10
HEX_i[1] => Mux3.IN10
HEX_i[1] => Mux4.IN18
HEX_i[1] => Mux5.IN18
HEX_i[1] => Mux6.IN18
HEX_i[2] => Mux0.IN9
HEX_i[2] => Mux1.IN9
HEX_i[2] => Mux2.IN9
HEX_i[2] => Mux3.IN9
HEX_i[2] => Mux4.IN17
HEX_i[2] => Mux5.IN17
HEX_i[2] => Mux6.IN17
HEX_i[3] => Mux0.IN8
HEX_i[3] => Mux1.IN8
HEX_i[3] => Mux2.IN8
HEX_i[3] => Mux3.IN8
HEX_i[3] => Mux4.IN16
HEX_i[3] => Mux5.IN16
HEX_i[3] => Mux6.IN16
ASCII_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[7] <= <GND>


|DE2_115|top_level:Inst_top_level|HEX_to_ASCII:Inst_HEX_to_ASCII_5
HEX_i[0] => Mux4.IN19
HEX_i[0] => Mux5.IN19
HEX_i[0] => Mux6.IN19
HEX_i[1] => Mux0.IN10
HEX_i[1] => Mux1.IN10
HEX_i[1] => Mux2.IN10
HEX_i[1] => Mux3.IN10
HEX_i[1] => Mux4.IN18
HEX_i[1] => Mux5.IN18
HEX_i[1] => Mux6.IN18
HEX_i[2] => Mux0.IN9
HEX_i[2] => Mux1.IN9
HEX_i[2] => Mux2.IN9
HEX_i[2] => Mux3.IN9
HEX_i[2] => Mux4.IN17
HEX_i[2] => Mux5.IN17
HEX_i[2] => Mux6.IN17
HEX_i[3] => Mux0.IN8
HEX_i[3] => Mux1.IN8
HEX_i[3] => Mux2.IN8
HEX_i[3] => Mux3.IN8
HEX_i[3] => Mux4.IN16
HEX_i[3] => Mux5.IN16
HEX_i[3] => Mux6.IN16
ASCII_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ASCII_o[7] <= <GND>


|DE2_115|top_level:Inst_top_level|LCD_User_Logic:Inst_LCD_User_Logic
iClk => LCD_Transmitter:Inst_LCD_Transmitter.iClk
iClk => currentByte_wr[0].CLK
iClk => currentByte_wr[1].CLK
iClk => currentByte_wr[2].CLK
iClk => currentByte_wr[3].CLK
iClk => currentByte_wr[4].CLK
iClk => currentByte_wr[5].CLK
iClk => currentByte_wr[6].CLK
iClk => currentByte_wr[7].CLK
iClk => ena.CLK
iClk => count[0].CLK
iClk => count[1].CLK
iClk => count[2].CLK
iClk => count[3].CLK
iClk => count[4].CLK
iClk => count[5].CLK
iClk => count[6].CLK
iClk => count[7].CLK
iClk => count[8].CLK
iClk => count[9].CLK
iClk => count[10].CLK
iClk => count[11].CLK
iClk => count[12].CLK
iClk => count[13].CLK
iClk => count[14].CLK
iClk => count[15].CLK
iClk => count[16].CLK
iClk => count[17].CLK
iClk => count[18].CLK
iClk => count[19].CLK
iClk => count[20].CLK
iClk => count[21].CLK
iClk => count[22].CLK
iClk => count[23].CLK
iClk => count[24].CLK
iClk => count[25].CLK
iClk => count[26].CLK
iClk => count[27].CLK
iClk => byte_end_int[0].CLK
iClk => byte_end_int[1].CLK
iClk => byte_end_int[2].CLK
iClk => byte_end_int[3].CLK
iClk => byte_end_int[4].CLK
iClk => byte_end_int[5].CLK
iClk => byte_end_int[6].CLK
iClk => byteSel[0].CLK
iClk => byteSel[1].CLK
iClk => byteSel[2].CLK
iClk => byteSel[3].CLK
iClk => byteSel[4].CLK
iClk => byteSel[5].CLK
iClk => byteSel[6].CLK
iClk => reset_h_edge.CLK
iClk => q1.CLK
iClk => q0.CLK
iClk => state~6.DATAIN
reset => q0.DATAIN
reset => LCD_Transmitter:Inst_LCD_Transmitter.reset
LCD_en => state.OUTPUTSELECT
LCD_en => state.OUTPUTSELECT
LCD_en => state.OUTPUTSELECT
LCD_en => state.OUTPUTSELECT
LCD_en => state.OUTPUTSELECT
speed_sel[0] => Mux9.IN3
speed_sel[0] => Mux10.IN3
speed_sel[0] => Mux11.IN3
speed_sel[0] => Mux12.IN3
speed_sel[0] => Mux13.IN3
speed_sel[1] => byteSel.OUTPUTSELECT
speed_sel[1] => byteSel.OUTPUTSELECT
speed_sel[1] => byteSel.OUTPUTSELECT
speed_sel[1] => byteSel.OUTPUTSELECT
speed_sel[1] => Mux9.IN2
speed_sel[1] => Mux10.IN2
speed_sel[1] => byteSel.OUTPUTSELECT
speed_sel[1] => byte_end_int.OUTPUTSELECT
speed_sel[1] => byte_end_int.OUTPUTSELECT
speed_sel[1] => byte_end_int.OUTPUTSELECT
speed_sel[1] => Mux11.IN2
speed_sel[1] => byte_end_int.OUTPUTSELECT
speed_sel[1] => Mux12.IN2
speed_sel[1] => Mux13.IN2
byte_start[0] => byteSel.DATAA
byte_start[0] => byteSel.DATAA
byte_start[1] => Mux10.IN4
byte_start[1] => Mux10.IN5
byte_start[1] => byteSel.DATAA
byte_start[2] => Mux9.IN4
byte_start[2] => Mux9.IN5
byte_start[2] => byteSel.DATAA
byte_start[3] => byteSel.DATAA
byte_start[3] => byteSel.DATAA
byte_start[4] => byteSel.DATAA
byte_start[4] => byteSel.DATAA
byte_start[5] => byteSel.DATAA
byte_start[5] => byteSel.DATAA
byte_start[6] => byteSel.DATAA
byte_start[6] => byteSel.DATAA
byte_end[0] => Equal1.IN6
byte_end[0] => Mux13.IN4
byte_end[0] => Mux13.IN5
byte_end[0] => byte_end_int.DATAA
byte_end[0] => byte_end_int[0].ADATA
byte_end[1] => Equal1.IN5
byte_end[1] => Mux12.IN4
byte_end[1] => Mux12.IN5
byte_end[1] => byte_end_int.DATAA
byte_end[1] => byte_end_int[1].ADATA
byte_end[2] => Equal1.IN4
byte_end[2] => byte_end_int.DATAA
byte_end[2] => byte_end_int.DATAA
byte_end[2] => byte_end_int[2].ADATA
byte_end[3] => Equal1.IN3
byte_end[3] => Mux11.IN4
byte_end[3] => Mux11.IN5
byte_end[3] => byte_end_int.DATAA
byte_end[3] => byte_end_int[3].ADATA
byte_end[4] => Equal1.IN2
byte_end[4] => byte_end_int.DATAA
byte_end[4] => byte_end_int.DATAA
byte_end[4] => byte_end_int[4].ADATA
byte_end[5] => Equal1.IN1
byte_end[5] => byte_end_int.DATAA
byte_end[5] => byte_end_int.DATAA
byte_end[5] => byte_end_int[5].ADATA
byte_end[6] => Equal1.IN0
byte_end[6] => byte_end_int.DATAA
byte_end[6] => byte_end_int.DATAA
byte_end[6] => byte_end_int[6].ADATA
data_ascii[0] => Mux7.IN122
data_ascii[0] => Mux7.IN123
data_ascii[1] => Mux6.IN122
data_ascii[1] => Mux6.IN123
data_ascii[2] => Mux5.IN122
data_ascii[2] => Mux5.IN123
data_ascii[3] => Mux4.IN122
data_ascii[3] => Mux4.IN123
data_ascii[4] => Mux3.IN122
data_ascii[4] => Mux3.IN123
data_ascii[5] => Mux2.IN122
data_ascii[5] => Mux2.IN123
data_ascii[6] => Mux1.IN122
data_ascii[6] => Mux1.IN123
data_ascii[7] => Mux0.IN122
data_ascii[7] => Mux0.IN123
data_ascii[8] => Mux7.IN120
data_ascii[8] => Mux7.IN121
data_ascii[9] => Mux6.IN120
data_ascii[9] => Mux6.IN121
data_ascii[10] => Mux5.IN120
data_ascii[10] => Mux5.IN121
data_ascii[11] => Mux4.IN120
data_ascii[11] => Mux4.IN121
data_ascii[12] => Mux3.IN120
data_ascii[12] => Mux3.IN121
data_ascii[13] => Mux2.IN120
data_ascii[13] => Mux2.IN121
data_ascii[14] => Mux1.IN120
data_ascii[14] => Mux1.IN121
data_ascii[15] => Mux0.IN120
data_ascii[15] => Mux0.IN121
data_ascii[16] => Mux7.IN118
data_ascii[16] => Mux7.IN119
data_ascii[17] => Mux6.IN118
data_ascii[17] => Mux6.IN119
data_ascii[18] => Mux5.IN118
data_ascii[18] => Mux5.IN119
data_ascii[19] => Mux4.IN118
data_ascii[19] => Mux4.IN119
data_ascii[20] => Mux3.IN118
data_ascii[20] => Mux3.IN119
data_ascii[21] => Mux2.IN118
data_ascii[21] => Mux2.IN119
data_ascii[22] => Mux1.IN118
data_ascii[22] => Mux1.IN119
data_ascii[23] => Mux0.IN118
data_ascii[23] => Mux0.IN119
data_ascii[24] => Mux7.IN116
data_ascii[24] => Mux7.IN117
data_ascii[25] => Mux6.IN116
data_ascii[25] => Mux6.IN117
data_ascii[26] => Mux5.IN116
data_ascii[26] => Mux5.IN117
data_ascii[27] => Mux4.IN116
data_ascii[27] => Mux4.IN117
data_ascii[28] => Mux3.IN116
data_ascii[28] => Mux3.IN117
data_ascii[29] => Mux2.IN116
data_ascii[29] => Mux2.IN117
data_ascii[30] => Mux1.IN116
data_ascii[30] => Mux1.IN117
data_ascii[31] => Mux0.IN116
data_ascii[31] => Mux0.IN117
address_ascii[0] => Mux7.IN126
address_ascii[0] => Mux7.IN127
address_ascii[1] => Mux6.IN126
address_ascii[1] => Mux6.IN127
address_ascii[2] => Mux5.IN126
address_ascii[2] => Mux5.IN127
address_ascii[3] => Mux4.IN126
address_ascii[3] => Mux4.IN127
address_ascii[4] => Mux3.IN126
address_ascii[4] => Mux3.IN127
address_ascii[5] => Mux2.IN126
address_ascii[5] => Mux2.IN127
address_ascii[6] => Mux1.IN126
address_ascii[6] => Mux1.IN127
address_ascii[7] => Mux0.IN126
address_ascii[7] => Mux0.IN127
address_ascii[8] => Mux7.IN124
address_ascii[8] => Mux7.IN125
address_ascii[9] => Mux6.IN124
address_ascii[9] => Mux6.IN125
address_ascii[10] => Mux5.IN124
address_ascii[10] => Mux5.IN125
address_ascii[11] => Mux4.IN124
address_ascii[11] => Mux4.IN125
address_ascii[12] => Mux3.IN124
address_ascii[12] => Mux3.IN125
address_ascii[13] => Mux2.IN124
address_ascii[13] => Mux2.IN125
address_ascii[14] => Mux1.IN124
address_ascii[14] => Mux1.IN125
address_ascii[15] => Mux0.IN124
address_ascii[15] => Mux0.IN125
Data[0] <= currentByte_wr[0].DB_MAX_OUTPUT_PORT_TYPE
Data[1] <= currentByte_wr[1].DB_MAX_OUTPUT_PORT_TYPE
Data[2] <= currentByte_wr[2].DB_MAX_OUTPUT_PORT_TYPE
Data[3] <= currentByte_wr[3].DB_MAX_OUTPUT_PORT_TYPE
Data[4] <= currentByte_wr[4].DB_MAX_OUTPUT_PORT_TYPE
Data[5] <= currentByte_wr[5].DB_MAX_OUTPUT_PORT_TYPE
Data[6] <= currentByte_wr[6].DB_MAX_OUTPUT_PORT_TYPE
Data[7] <= currentByte_wr[7].DB_MAX_OUTPUT_PORT_TYPE
en <= LCD_Transmitter:Inst_LCD_Transmitter.en
rs <= Mux8.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|LCD_User_Logic:Inst_LCD_User_Logic|LCD_Transmitter:Inst_LCD_Transmitter
iClk => clk_en.CLK
iClk => clk_cnt[0].CLK
iClk => clk_cnt[1].CLK
iClk => clk_cnt[2].CLK
iClk => clk_cnt[3].CLK
iClk => clk_cnt[4].CLK
iClk => clk_cnt[5].CLK
iClk => clk_cnt[6].CLK
iClk => clk_cnt[7].CLK
iClk => clk_cnt[8].CLK
iClk => clk_cnt[9].CLK
iClk => clk_cnt[10].CLK
iClk => clk_cnt[11].CLK
iClk => clk_cnt[12].CLK
iClk => clk_cnt[13].CLK
iClk => clk_cnt[14].CLK
iClk => clk_cnt[15].CLK
iClk => clk_cnt[16].CLK
iClk => en~reg0.CLK
iClk => busy~reg0.CLK
iClk => state~1.DATAIN
reset => en~reg0.ACLR
reset => busy~reg0.ACLR
reset => state~3.DATAIN
ena => busy.DATAB
ena => Selector0.IN2
ena => state.DATAB
ena => Selector1.IN2
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
en <= en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|system_controller:Inst_system_controller
clk => clk_en_1.CLK
clk => clk_cnt[0].CLK
clk => clk_cnt[1].CLK
clk => clk_cnt[2].CLK
clk => clk_cnt[3].CLK
clk => clk_cnt[4].CLK
clk => clk_cnt[5].CLK
clk => clk_cnt[6].CLK
clk => clk_cnt[7].CLK
clk => clk_cnt[8].CLK
clk => clk_cnt[9].CLK
clk => clk_cnt[10].CLK
clk => clk_cnt[11].CLK
clk => clk_cnt[12].CLK
clk => clk_cnt[13].CLK
clk => clk_cnt[14].CLK
clk => clk_cnt[15].CLK
clk => clk_cnt[16].CLK
clk => clk_cnt[17].CLK
clk => clk_cnt[18].CLK
clk => clk_cnt[19].CLK
clk => clk_cnt[20].CLK
clk => clk_cnt[21].CLK
clk => clk_cnt[22].CLK
clk => clk_cnt[23].CLK
clk => clk_cnt[24].CLK
clk => clk_cnt[25].CLK
clk => read_SRAM.CLK
clk => sampled.CLK
clk => run_counter.CLK
clk => data_o[0]~reg0.CLK
clk => data_o[1]~reg0.CLK
clk => data_o[2]~reg0.CLK
clk => data_o[3]~reg0.CLK
clk => data_o[4]~reg0.CLK
clk => data_o[5]~reg0.CLK
clk => data_o[6]~reg0.CLK
clk => data_o[7]~reg0.CLK
clk => data_o[8]~reg0.CLK
clk => data_o[9]~reg0.CLK
clk => data_o[10]~reg0.CLK
clk => data_o[11]~reg0.CLK
clk => data_o[12]~reg0.CLK
clk => data_o[13]~reg0.CLK
clk => data_o[14]~reg0.CLK
clk => data_o[15]~reg0.CLK
clk => address_cnt[0].CLK
clk => address_cnt[1].CLK
clk => address_cnt[2].CLK
clk => address_cnt[3].CLK
clk => address_cnt[4].CLK
clk => address_cnt[5].CLK
clk => address_cnt[6].CLK
clk => address_cnt[7].CLK
clk => refresh_LCD.CLK
clk => to_increment.CLK
clk => ROM_cnt[0].CLK
clk => ROM_cnt[1].CLK
clk => ROM_cnt[2].CLK
clk => ROM_cnt[3].CLK
clk => ROM_cnt[4].CLK
clk => ROM_cnt[5].CLK
clk => ROM_cnt[6].CLK
clk => ROM_cnt[7].CLK
clk => ROM_cnt[8].CLK
clk => SRAM_valid_int.CLK
clk => address_out[0]~reg0.CLK
clk => address_out[1]~reg0.CLK
clk => address_out[2]~reg0.CLK
clk => address_out[3]~reg0.CLK
clk => address_out[4]~reg0.CLK
clk => address_out[5]~reg0.CLK
clk => address_out[6]~reg0.CLK
clk => address_out[7]~reg0.CLK
clk => data_select~reg0.CLK
clk => SRAM_rw_int.CLK
clk => byte_end[0]~reg0.CLK
clk => byte_end[1]~reg0.CLK
clk => byte_end[2]~reg0.CLK
clk => byte_end[3]~reg0.CLK
clk => byte_end[4]~reg0.CLK
clk => byte_end[5]~reg0.CLK
clk => byte_end[6]~reg0.CLK
clk => byte_start[0]~reg0.CLK
clk => byte_start[1]~reg0.CLK
clk => byte_start[2]~reg0.CLK
clk => byte_start[3]~reg0.CLK
clk => byte_start[4]~reg0.CLK
clk => byte_start[5]~reg0.CLK
clk => byte_start[6]~reg0.CLK
clk => speed_sel[0]~reg0.CLK
clk => speed_sel[1]~reg0.CLK
clk => next_state~7.DATAIN
reset_h => speed_sel.OUTPUTSELECT
reset_h => speed_sel.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => SRAM_rw_int.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => SRAM_valid_int.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => refresh_LCD.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => speed_sel.OUTPUTSELECT
reset_h => speed_sel.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_start.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => byte_end.OUTPUTSELECT
reset_h => SRAM_rw_int.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => address_out.OUTPUTSELECT
reset_h => SRAM_valid_int.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => ROM_cnt.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => refresh_LCD.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => address_cnt.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => data_o.OUTPUTSELECT
reset_h => read_SRAM.OUTPUTSELECT
reset_h => run_counter.ENA
reset_h => sampled.ENA
reset_h => to_increment.ENA
reset_h => data_select~reg0.ENA
pause_btn => next_state.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pause_btn => refresh_LCD.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => address_cnt.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pause_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => refresh_LCD.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => address_cnt.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
pwm_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => refresh_LCD.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => address_cnt.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_btn => next_state.OUTPUTSELECT
speed_sel[0] <= speed_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
speed_sel[1] <= speed_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[0] <= byte_start[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[1] <= byte_start[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[2] <= byte_start[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[3] <= byte_start[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[4] <= byte_start[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[5] <= byte_start[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_start[6] <= byte_start[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[0] <= byte_end[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[1] <= byte_end[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[2] <= byte_end[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[3] <= byte_end[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[4] <= byte_end[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[5] <= byte_end[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_end[6] <= byte_end[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_en <= LCD_en_int.DB_MAX_OUTPUT_PORT_TYPE
SRAM_busy_h => process_0.IN1
SRAM_busy_h => SRAM_valid_int.OUTPUTSELECT
SRAM_busy_h => read_SRAM.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => address_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => ROM_cnt.OUTPUTSELECT
SRAM_busy_h => to_increment.OUTPUTSELECT
SRAM_busy_h => process_0.IN1
SRAM_busy_h => Selector0.IN0
data_i[0] => data_o.DATAA
data_i[1] => data_o.DATAA
data_i[2] => data_o.DATAA
data_i[3] => data_o.DATAA
data_i[4] => data_o.DATAA
data_i[5] => data_o.DATAA
data_i[6] => data_o.DATAA
data_i[7] => data_o.DATAA
data_i[8] => data_o.DATAA
data_i[9] => data_o.DATAA
data_i[10] => data_o.DATAA
data_i[11] => data_o.DATAA
data_i[12] => data_o.DATAA
data_i[13] => data_o.DATAA
data_i[14] => data_o.DATAA
data_i[15] => data_o.DATAA
data_o[0] <= data_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[1] <= data_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[2] <= data_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[3] <= data_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[4] <= data_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[5] <= data_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[6] <= data_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[7] <= data_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[8] <= data_o[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[9] <= data_o[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[10] <= data_o[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[11] <= data_o[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[12] <= data_o[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[13] <= data_o[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[14] <= data_o[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_o[15] <= data_o[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_select <= data_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[0] <= address_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[1] <= address_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[2] <= address_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[3] <= address_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[4] <= address_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[5] <= address_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[6] <= address_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address_out[7] <= address_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_rw <= SRAM_rw_int.DB_MAX_OUTPUT_PORT_TYPE
SRAM_valid <= SRAM_valid_int.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|i2c_user_logic:Inst_i2c_user_logic
clk => i2c_master:Inst_i2c_master.clk
clk => i2c_enable.CLK
clk => first.CLK
clk => address_sel.CLK
clk => byteSel[0].CLK
clk => byteSel[1].CLK
clk => byteSel[2].CLK
clk => byteSel[3].CLK
clk => next_state~6.DATAIN
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => next_state.OUTPUTSELECT
reset_h => byteSel.OUTPUTSELECT
reset_h => byteSel.OUTPUTSELECT
reset_h => byteSel.OUTPUTSELECT
reset_h => byteSel.OUTPUTSELECT
reset_h => address_sel.OUTPUTSELECT
reset_h => first.OUTPUTSELECT
reset_h => i2c_master:Inst_i2c_master.reset_n
reset_h => i2c_enable.ENA
data_hex[0] => Mux7.IN15
data_hex[1] => Mux6.IN15
data_hex[2] => Mux5.IN15
data_hex[3] => Mux4.IN15
data_hex[4] => Mux7.IN14
data_hex[5] => Mux6.IN14
data_hex[6] => Mux5.IN14
data_hex[7] => Mux4.IN14
data_hex[8] => Mux7.IN13
data_hex[9] => Mux6.IN13
data_hex[10] => Mux5.IN13
data_hex[11] => Mux4.IN13
data_hex[12] => Mux7.IN12
data_hex[13] => Mux6.IN12
data_hex[14] => Mux5.IN12
data_hex[15] => Mux4.IN12
sda <> i2c_master:Inst_i2c_master.sda
scl <> i2c_master:Inst_i2c_master.scl


|DE2_115|top_level:Inst_top_level|i2c_user_logic:Inst_i2c_user_logic|i2c_master:Inst_i2c_master
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => state~1.DATAIN
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.PRESET
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
reset_n => data_rx[7].ENA
reset_n => data_rx[6].ENA
reset_n => data_rx[5].ENA
reset_n => data_rx[4].ENA
reset_n => data_rx[3].ENA
reset_n => data_rx[2].ENA
reset_n => data_rx[1].ENA
reset_n => data_rx[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <> scl


|DE2_115|top_level:Inst_top_level|SRAM_Controller:Inst_SRAM_Controller
cont_i[0] => cont_io_in.DATAB
cont_i[1] => cont_io_in.DATAB
cont_i[2] => cont_io_in.DATAB
cont_i[3] => cont_io_in.DATAB
cont_i[4] => cont_io_in.DATAB
cont_i[5] => cont_io_in.DATAB
cont_i[6] => cont_io_in.DATAB
cont_i[7] => cont_io_in.DATAB
cont_i[8] => cont_io_in.DATAB
cont_i[9] => cont_io_in.DATAB
cont_i[10] => cont_io_in.DATAB
cont_i[11] => cont_io_in.DATAB
cont_i[12] => cont_io_in.DATAB
cont_i[13] => cont_io_in.DATAB
cont_i[14] => cont_io_in.DATAB
cont_i[15] => cont_io_in.DATAB
cont_o[0] <= cont_io_out[0].DB_MAX_OUTPUT_PORT_TYPE
cont_o[1] <= cont_io_out[1].DB_MAX_OUTPUT_PORT_TYPE
cont_o[2] <= cont_io_out[2].DB_MAX_OUTPUT_PORT_TYPE
cont_o[3] <= cont_io_out[3].DB_MAX_OUTPUT_PORT_TYPE
cont_o[4] <= cont_io_out[4].DB_MAX_OUTPUT_PORT_TYPE
cont_o[5] <= cont_io_out[5].DB_MAX_OUTPUT_PORT_TYPE
cont_o[6] <= cont_io_out[6].DB_MAX_OUTPUT_PORT_TYPE
cont_o[7] <= cont_io_out[7].DB_MAX_OUTPUT_PORT_TYPE
cont_o[8] <= cont_io_out[8].DB_MAX_OUTPUT_PORT_TYPE
cont_o[9] <= cont_io_out[9].DB_MAX_OUTPUT_PORT_TYPE
cont_o[10] <= cont_io_out[10].DB_MAX_OUTPUT_PORT_TYPE
cont_o[11] <= cont_io_out[11].DB_MAX_OUTPUT_PORT_TYPE
cont_o[12] <= cont_io_out[12].DB_MAX_OUTPUT_PORT_TYPE
cont_o[13] <= cont_io_out[13].DB_MAX_OUTPUT_PORT_TYPE
cont_o[14] <= cont_io_out[14].DB_MAX_OUTPUT_PORT_TYPE
cont_o[15] <= cont_io_out[15].DB_MAX_OUTPUT_PORT_TYPE
cont_address[0] => sram_address_reg.DATAB
cont_address[1] => sram_address_reg.DATAB
cont_address[2] => sram_address_reg.DATAB
cont_address[3] => sram_address_reg.DATAB
cont_address[4] => sram_address_reg.DATAB
cont_address[5] => sram_address_reg.DATAB
cont_address[6] => sram_address_reg.DATAB
cont_address[7] => sram_address_reg.DATAB
cont_rw => process_0.IN1
cont_rw => cont_rw_reg.DATAB
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => cont_io_out.OUTPUTSELECT
cont_rw => sampled.OUTPUTSELECT
cont_data_valid => next_state.OUTPUTSELECT
cont_data_valid => next_state.OUTPUTSELECT
cont_data_valid => next_state.OUTPUTSELECT
cont_data_valid => next_state.OUTPUTSELECT
cont_data_valid => next_state.OUTPUTSELECT
cont_data_valid => next_state.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => sram_io_out.OUTPUTSELECT
cont_data_valid => Selector18.IN3
sram_io[0] <> sram_io[0]
sram_io[1] <> sram_io[1]
sram_io[2] <> sram_io[2]
sram_io[3] <> sram_io[3]
sram_io[4] <> sram_io[4]
sram_io[5] <> sram_io[5]
sram_io[6] <> sram_io[6]
sram_io[7] <> sram_io[7]
sram_io[8] <> sram_io[8]
sram_io[9] <> sram_io[9]
sram_io[10] <> sram_io[10]
sram_io[11] <> sram_io[11]
sram_io[12] <> sram_io[12]
sram_io[13] <> sram_io[13]
sram_io[14] <> sram_io[14]
sram_io[15] <> sram_io[15]
sram_address[0] <= sram_address_reg[0].DB_MAX_OUTPUT_PORT_TYPE
sram_address[1] <= sram_address_reg[1].DB_MAX_OUTPUT_PORT_TYPE
sram_address[2] <= sram_address_reg[2].DB_MAX_OUTPUT_PORT_TYPE
sram_address[3] <= sram_address_reg[3].DB_MAX_OUTPUT_PORT_TYPE
sram_address[4] <= sram_address_reg[4].DB_MAX_OUTPUT_PORT_TYPE
sram_address[5] <= sram_address_reg[5].DB_MAX_OUTPUT_PORT_TYPE
sram_address[6] <= sram_address_reg[6].DB_MAX_OUTPUT_PORT_TYPE
sram_address[7] <= sram_address_reg[7].DB_MAX_OUTPUT_PORT_TYPE
sram_address[8] <= sram_address_reg[8].DB_MAX_OUTPUT_PORT_TYPE
sram_address[9] <= sram_address_reg[9].DB_MAX_OUTPUT_PORT_TYPE
sram_address[10] <= sram_address_reg[10].DB_MAX_OUTPUT_PORT_TYPE
sram_address[11] <= sram_address_reg[11].DB_MAX_OUTPUT_PORT_TYPE
sram_address[12] <= sram_address_reg[12].DB_MAX_OUTPUT_PORT_TYPE
sram_address[13] <= sram_address_reg[13].DB_MAX_OUTPUT_PORT_TYPE
sram_address[14] <= sram_address_reg[14].DB_MAX_OUTPUT_PORT_TYPE
sram_address[15] <= sram_address_reg[15].DB_MAX_OUTPUT_PORT_TYPE
sram_address[16] <= sram_address_reg[16].DB_MAX_OUTPUT_PORT_TYPE
sram_address[17] <= sram_address_reg[17].DB_MAX_OUTPUT_PORT_TYPE
sram_address[18] <= sram_address_reg[18].DB_MAX_OUTPUT_PORT_TYPE
sram_address[19] <= sram_address_reg[19].DB_MAX_OUTPUT_PORT_TYPE
sram_we_n <= sram_we_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
sram_oe_n <= sram_oe_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
sram_ub_n <= sram_ub_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
sram_lb_n <= sram_lb_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
sram_ce_n <= sram_ce_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => sram_io_out[0].CLK
clk => sram_io_out[1].CLK
clk => sram_io_out[2].CLK
clk => sram_io_out[3].CLK
clk => sram_io_out[4].CLK
clk => sram_io_out[5].CLK
clk => sram_io_out[6].CLK
clk => sram_io_out[7].CLK
clk => sram_io_out[8].CLK
clk => sram_io_out[9].CLK
clk => sram_io_out[10].CLK
clk => sram_io_out[11].CLK
clk => sram_io_out[12].CLK
clk => sram_io_out[13].CLK
clk => sram_io_out[14].CLK
clk => sram_io_out[15].CLK
clk => sampled.CLK
clk => cont_rw_reg.CLK
clk => busy_h~reg0.CLK
clk => sram_ce_n~reg0.CLK
clk => sram_lb_n~reg0.CLK
clk => sram_ub_n~reg0.CLK
clk => sram_oe_n~reg0.CLK
clk => sram_we_n~reg0.CLK
clk => sram_address_reg[0].CLK
clk => sram_address_reg[1].CLK
clk => sram_address_reg[2].CLK
clk => sram_address_reg[3].CLK
clk => sram_address_reg[4].CLK
clk => sram_address_reg[5].CLK
clk => sram_address_reg[6].CLK
clk => sram_address_reg[7].CLK
clk => sram_address_reg[8].CLK
clk => sram_address_reg[9].CLK
clk => sram_address_reg[10].CLK
clk => sram_address_reg[11].CLK
clk => sram_address_reg[12].CLK
clk => sram_address_reg[13].CLK
clk => sram_address_reg[14].CLK
clk => sram_address_reg[15].CLK
clk => sram_address_reg[16].CLK
clk => sram_address_reg[17].CLK
clk => sram_address_reg[18].CLK
clk => sram_address_reg[19].CLK
clk => cont_io_out[0].CLK
clk => cont_io_out[1].CLK
clk => cont_io_out[2].CLK
clk => cont_io_out[3].CLK
clk => cont_io_out[4].CLK
clk => cont_io_out[5].CLK
clk => cont_io_out[6].CLK
clk => cont_io_out[7].CLK
clk => cont_io_out[8].CLK
clk => cont_io_out[9].CLK
clk => cont_io_out[10].CLK
clk => cont_io_out[11].CLK
clk => cont_io_out[12].CLK
clk => cont_io_out[13].CLK
clk => cont_io_out[14].CLK
clk => cont_io_out[15].CLK
clk => cont_io_in[0].CLK
clk => cont_io_in[1].CLK
clk => cont_io_in[2].CLK
clk => cont_io_in[3].CLK
clk => cont_io_in[4].CLK
clk => cont_io_in[5].CLK
clk => cont_io_in[6].CLK
clk => cont_io_in[7].CLK
clk => cont_io_in[8].CLK
clk => cont_io_in[9].CLK
clk => cont_io_in[10].CLK
clk => cont_io_in[11].CLK
clk => cont_io_in[12].CLK
clk => cont_io_in[13].CLK
clk => cont_io_in[14].CLK
clk => cont_io_in[15].CLK
clk => next_state~7.DATAIN
reset_h => sampled.OUTPUTSELECT
reset_h => cont_io_out[0].OUTPUTSELECT
reset_h => cont_io_out[1].OUTPUTSELECT
reset_h => cont_io_out[2].OUTPUTSELECT
reset_h => cont_io_out[3].OUTPUTSELECT
reset_h => cont_io_out[4].OUTPUTSELECT
reset_h => cont_io_out[5].OUTPUTSELECT
reset_h => cont_io_out[6].OUTPUTSELECT
reset_h => cont_io_out[7].OUTPUTSELECT
reset_h => cont_io_out[8].OUTPUTSELECT
reset_h => cont_io_out[9].OUTPUTSELECT
reset_h => cont_io_out[10].OUTPUTSELECT
reset_h => cont_io_out[11].OUTPUTSELECT
reset_h => cont_io_out[12].OUTPUTSELECT
reset_h => cont_io_out[13].OUTPUTSELECT
reset_h => cont_io_out[14].OUTPUTSELECT
reset_h => cont_io_out[15].OUTPUTSELECT
reset_h => sampled.OUTPUTSELECT
reset_h => next_state.read2.OUTPUTSELECT
reset_h => next_state.read1.OUTPUTSELECT
reset_h => next_state.write2.OUTPUTSELECT
reset_h => next_state.write1.OUTPUTSELECT
reset_h => next_state.ready.OUTPUTSELECT
reset_h => next_state.init.OUTPUTSELECT
reset_h => cont_io_out[0].OUTPUTSELECT
reset_h => cont_io_out[1].OUTPUTSELECT
reset_h => cont_io_out[2].OUTPUTSELECT
reset_h => cont_io_out[3].OUTPUTSELECT
reset_h => cont_io_out[4].OUTPUTSELECT
reset_h => cont_io_out[5].OUTPUTSELECT
reset_h => cont_io_out[6].OUTPUTSELECT
reset_h => cont_io_out[7].OUTPUTSELECT
reset_h => cont_io_out[8].OUTPUTSELECT
reset_h => cont_io_out[9].OUTPUTSELECT
reset_h => cont_io_out[10].OUTPUTSELECT
reset_h => cont_io_out[11].OUTPUTSELECT
reset_h => cont_io_out[12].OUTPUTSELECT
reset_h => cont_io_out[13].OUTPUTSELECT
reset_h => cont_io_out[14].OUTPUTSELECT
reset_h => cont_io_out[15].OUTPUTSELECT
reset_h => sram_io_out[8].ENA
reset_h => sram_io_out[7].ENA
reset_h => sram_io_out[6].ENA
reset_h => sram_io_out[5].ENA
reset_h => sram_io_out[4].ENA
reset_h => sram_io_out[3].ENA
reset_h => sram_io_out[2].ENA
reset_h => sram_io_out[1].ENA
reset_h => cont_io_in[0].ENA
reset_h => sram_io_out[0].ENA
reset_h => sram_io_out[9].ENA
reset_h => sram_io_out[10].ENA
reset_h => sram_io_out[11].ENA
reset_h => sram_io_out[12].ENA
reset_h => sram_io_out[13].ENA
reset_h => sram_io_out[14].ENA
reset_h => sram_io_out[15].ENA
reset_h => cont_rw_reg.ENA
reset_h => busy_h~reg0.ENA
reset_h => sram_ce_n~reg0.ENA
reset_h => sram_lb_n~reg0.ENA
reset_h => sram_ub_n~reg0.ENA
reset_h => sram_oe_n~reg0.ENA
reset_h => sram_we_n~reg0.ENA
reset_h => sram_address_reg[0].ENA
reset_h => sram_address_reg[1].ENA
reset_h => sram_address_reg[2].ENA
reset_h => sram_address_reg[3].ENA
reset_h => sram_address_reg[4].ENA
reset_h => sram_address_reg[5].ENA
reset_h => sram_address_reg[6].ENA
reset_h => sram_address_reg[7].ENA
reset_h => sram_address_reg[8].ENA
reset_h => sram_address_reg[9].ENA
reset_h => sram_address_reg[10].ENA
reset_h => sram_address_reg[11].ENA
reset_h => sram_address_reg[12].ENA
reset_h => sram_address_reg[13].ENA
reset_h => sram_address_reg[14].ENA
reset_h => sram_address_reg[15].ENA
reset_h => sram_address_reg[16].ENA
reset_h => sram_address_reg[17].ENA
reset_h => sram_address_reg[18].ENA
reset_h => sram_address_reg[19].ENA
reset_h => cont_io_in[1].ENA
reset_h => cont_io_in[2].ENA
reset_h => cont_io_in[3].ENA
reset_h => cont_io_in[4].ENA
reset_h => cont_io_in[5].ENA
reset_h => cont_io_in[6].ENA
reset_h => cont_io_in[7].ENA
reset_h => cont_io_in[8].ENA
reset_h => cont_io_in[9].ENA
reset_h => cont_io_in[10].ENA
reset_h => cont_io_in[11].ENA
reset_h => cont_io_in[12].ENA
reset_h => cont_io_in[13].ENA
reset_h => cont_io_in[14].ENA
reset_h => cont_io_in[15].ENA
busy_h <= busy_h~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|address_counter:Inst_Address_Counter
clk => address_int[0].CLK
clk => address_int[1].CLK
clk => address_int[2].CLK
clk => address_int[3].CLK
clk => address_int[4].CLK
clk => address_int[5].CLK
clk => address_int[6].CLK
clk => address_int[7].CLK
clk => address_int[8].CLK
clk => address_int[9].CLK
clk => address_int[10].CLK
clk => address_int[11].CLK
clk => address_int[12].CLK
clk => address_int[13].CLK
clk => address_int[14].CLK
clk => address_int[15].CLK
clk => address_int[16].CLK
clk => address_int[17].CLK
clk => address_int[18].CLK
clk => address_int[19].CLK
clk => address_int[20].CLK
clk => address_int[21].CLK
clk => address_int[22].CLK
clk => address_int[23].CLK
clk => address_int[24].CLK
clk => address_int[25].CLK
clk => address_int[26].CLK
clk => address_int[27].CLK
clk => address_int[28].CLK
clk => address_int[29].CLK
clk => address_int[30].CLK
clk => address_int[31].CLK
speed_sel[0] => Mux0.IN5
speed_sel[0] => Mux1.IN5
speed_sel[1] => Mux0.IN4
speed_sel[1] => Mux1.IN4
clk_en_op <= <GND>
address_out[0] <= address_int[24].DB_MAX_OUTPUT_PORT_TYPE
address_out[1] <= address_int[25].DB_MAX_OUTPUT_PORT_TYPE
address_out[2] <= address_int[26].DB_MAX_OUTPUT_PORT_TYPE
address_out[3] <= address_int[27].DB_MAX_OUTPUT_PORT_TYPE
address_out[4] <= address_int[28].DB_MAX_OUTPUT_PORT_TYPE
address_out[5] <= address_int[29].DB_MAX_OUTPUT_PORT_TYPE
address_out[6] <= address_int[30].DB_MAX_OUTPUT_PORT_TYPE
address_out[7] <= address_int[31].DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|ROM1Port:Inst_ROM1_Port
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]
q[8] <= altsyncram:altsyncram_component.q_a[8]
q[9] <= altsyncram:altsyncram_component.q_a[9]
q[10] <= altsyncram:altsyncram_component.q_a[10]
q[11] <= altsyncram:altsyncram_component.q_a[11]
q[12] <= altsyncram:altsyncram_component.q_a[12]
q[13] <= altsyncram:altsyncram_component.q_a[13]
q[14] <= altsyncram:altsyncram_component.q_a[14]
q[15] <= altsyncram:altsyncram_component.q_a[15]


|DE2_115|top_level:Inst_top_level|ROM1Port:Inst_ROM1_Port|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_a[12] => ~NO_FANOUT~
data_a[13] => ~NO_FANOUT~
data_a[14] => ~NO_FANOUT~
data_a[15] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_u291:auto_generated.address_a[0]
address_a[1] => altsyncram_u291:auto_generated.address_a[1]
address_a[2] => altsyncram_u291:auto_generated.address_a[2]
address_a[3] => altsyncram_u291:auto_generated.address_a[3]
address_a[4] => altsyncram_u291:auto_generated.address_a[4]
address_a[5] => altsyncram_u291:auto_generated.address_a[5]
address_a[6] => altsyncram_u291:auto_generated.address_a[6]
address_a[7] => altsyncram_u291:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_u291:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_u291:auto_generated.q_a[0]
q_a[1] <= altsyncram_u291:auto_generated.q_a[1]
q_a[2] <= altsyncram_u291:auto_generated.q_a[2]
q_a[3] <= altsyncram_u291:auto_generated.q_a[3]
q_a[4] <= altsyncram_u291:auto_generated.q_a[4]
q_a[5] <= altsyncram_u291:auto_generated.q_a[5]
q_a[6] <= altsyncram_u291:auto_generated.q_a[6]
q_a[7] <= altsyncram_u291:auto_generated.q_a[7]
q_a[8] <= altsyncram_u291:auto_generated.q_a[8]
q_a[9] <= altsyncram_u291:auto_generated.q_a[9]
q_a[10] <= altsyncram_u291:auto_generated.q_a[10]
q_a[11] <= altsyncram_u291:auto_generated.q_a[11]
q_a[12] <= altsyncram_u291:auto_generated.q_a[12]
q_a[13] <= altsyncram_u291:auto_generated.q_a[13]
q_a[14] <= altsyncram_u291:auto_generated.q_a[14]
q_a[15] <= altsyncram_u291:auto_generated.q_a[15]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|DE2_115|top_level:Inst_top_level|ROM1Port:Inst_ROM1_Port|altsyncram:altsyncram_component|altsyncram_u291:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT


|DE2_115|top_level:Inst_top_level|btn_debounce_toggle:Inst_BTN_Debounce_reset
BTN_I => btn_counter_process.IN1
CLK => btn_toggle.CLK
CLK => btn_pulse_r.CLK
CLK => btn_pulse.CLK
CLK => btn_sync[0].CLK
CLK => btn_sync[1].CLK
CLK => btn_cntr[0].CLK
CLK => btn_cntr[1].CLK
CLK => btn_cntr[2].CLK
CLK => btn_cntr[3].CLK
CLK => btn_cntr[4].CLK
CLK => btn_cntr[5].CLK
CLK => btn_cntr[6].CLK
CLK => btn_cntr[7].CLK
CLK => btn_cntr[8].CLK
CLK => btn_cntr[9].CLK
CLK => btn_cntr[10].CLK
CLK => btn_cntr[11].CLK
CLK => btn_cntr[12].CLK
CLK => btn_cntr[13].CLK
CLK => btn_cntr[14].CLK
CLK => btn_cntr[15].CLK
CLK => btn_reg.CLK
BTN_O <= btn_reg.DB_MAX_OUTPUT_PORT_TYPE
pulse_O <= btn_pulse_r.DB_MAX_OUTPUT_PORT_TYPE
TOGGLE_O <= btn_toggle.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|btn_debounce_toggle:Inst_BTN_Debounce_pause
BTN_I => btn_counter_process.IN1
CLK => btn_toggle.CLK
CLK => btn_pulse_r.CLK
CLK => btn_pulse.CLK
CLK => btn_sync[0].CLK
CLK => btn_sync[1].CLK
CLK => btn_cntr[0].CLK
CLK => btn_cntr[1].CLK
CLK => btn_cntr[2].CLK
CLK => btn_cntr[3].CLK
CLK => btn_cntr[4].CLK
CLK => btn_cntr[5].CLK
CLK => btn_cntr[6].CLK
CLK => btn_cntr[7].CLK
CLK => btn_cntr[8].CLK
CLK => btn_cntr[9].CLK
CLK => btn_cntr[10].CLK
CLK => btn_cntr[11].CLK
CLK => btn_cntr[12].CLK
CLK => btn_cntr[13].CLK
CLK => btn_cntr[14].CLK
CLK => btn_cntr[15].CLK
CLK => btn_reg.CLK
BTN_O <= btn_reg.DB_MAX_OUTPUT_PORT_TYPE
pulse_O <= btn_pulse_r.DB_MAX_OUTPUT_PORT_TYPE
TOGGLE_O <= btn_toggle.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|btn_debounce_toggle:Inst_BTN_Debounce_speed
BTN_I => btn_counter_process.IN1
CLK => btn_toggle.CLK
CLK => btn_pulse_r.CLK
CLK => btn_pulse.CLK
CLK => btn_sync[0].CLK
CLK => btn_sync[1].CLK
CLK => btn_cntr[0].CLK
CLK => btn_cntr[1].CLK
CLK => btn_cntr[2].CLK
CLK => btn_cntr[3].CLK
CLK => btn_cntr[4].CLK
CLK => btn_cntr[5].CLK
CLK => btn_cntr[6].CLK
CLK => btn_cntr[7].CLK
CLK => btn_cntr[8].CLK
CLK => btn_cntr[9].CLK
CLK => btn_cntr[10].CLK
CLK => btn_cntr[11].CLK
CLK => btn_cntr[12].CLK
CLK => btn_cntr[13].CLK
CLK => btn_cntr[14].CLK
CLK => btn_cntr[15].CLK
CLK => btn_reg.CLK
BTN_O <= btn_reg.DB_MAX_OUTPUT_PORT_TYPE
pulse_O <= btn_pulse_r.DB_MAX_OUTPUT_PORT_TYPE
TOGGLE_O <= btn_toggle.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|btn_debounce_toggle:Inst_BTN_Debounce_pwm
BTN_I => btn_counter_process.IN1
CLK => btn_toggle.CLK
CLK => btn_pulse_r.CLK
CLK => btn_pulse.CLK
CLK => btn_sync[0].CLK
CLK => btn_sync[1].CLK
CLK => btn_cntr[0].CLK
CLK => btn_cntr[1].CLK
CLK => btn_cntr[2].CLK
CLK => btn_cntr[3].CLK
CLK => btn_cntr[4].CLK
CLK => btn_cntr[5].CLK
CLK => btn_cntr[6].CLK
CLK => btn_cntr[7].CLK
CLK => btn_cntr[8].CLK
CLK => btn_cntr[9].CLK
CLK => btn_cntr[10].CLK
CLK => btn_cntr[11].CLK
CLK => btn_cntr[12].CLK
CLK => btn_cntr[13].CLK
CLK => btn_cntr[14].CLK
CLK => btn_cntr[15].CLK
CLK => btn_reg.CLK
BTN_O <= btn_reg.DB_MAX_OUTPUT_PORT_TYPE
pulse_O <= btn_pulse_r.DB_MAX_OUTPUT_PORT_TYPE
TOGGLE_O <= btn_toggle.DB_MAX_OUTPUT_PORT_TYPE


|DE2_115|top_level:Inst_top_level|Reset_Delay:Inst_Reset_Delay
iCLK => oRESET~reg0.CLK
iCLK => Cont[0].CLK
iCLK => Cont[1].CLK
iCLK => Cont[2].CLK
iCLK => Cont[3].CLK
iCLK => Cont[4].CLK
iCLK => Cont[5].CLK
iCLK => Cont[6].CLK
iCLK => Cont[7].CLK
iCLK => Cont[8].CLK
iCLK => Cont[9].CLK
iCLK => Cont[10].CLK
iCLK => Cont[11].CLK
iCLK => Cont[12].CLK
iCLK => Cont[13].CLK
iCLK => Cont[14].CLK
iCLK => Cont[15].CLK
iCLK => Cont[16].CLK
iCLK => Cont[17].CLK
iCLK => Cont[18].CLK
iCLK => Cont[19].CLK
oRESET <= oRESET~reg0.DB_MAX_OUTPUT_PORT_TYPE


